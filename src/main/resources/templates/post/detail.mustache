<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Iter</title>
    <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <link rel="shortcut icon" href="{{storageUrl}}/static/favicon.ico">
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        .map_wrap, .map_wrap * {margin:0;padding:0;font-family:'Malgun Gothic',dotum,'돋움',sans-serif;font-size:12px;}
        .map_wrap a, .map_wrap a:hover, .map_wrap a:active{color:#000;text-decoration: none;}
        .map_wrap {position:relative;width:100%;height:500px;}
        #menu_wrap {position:absolute;top:0;left:0;bottom:0;width:250px;margin:10px 0 30px 10px;padding:5px;overflow-y:auto;background:rgba(255, 255, 255, 0.7);z-index: 1;font-size:12px;border-radius: 10px;}
        .bg_white {background:#fff;}
        #menu_wrap hr {display: block; height: 1px;border: 0; border-top: 2px solid #5F5F5F;margin:3px 0;}
        #menu_wrap .option{text-align: center;}
        #menu_wrap .option p {margin:10px 0;}
        #menu_wrap .option button {margin-left:5px;}
        #placesList li {list-style: none;}
        #placesList .item {position:relative;border-bottom:1px solid #888;overflow: hidden;cursor: pointer;min-height: 65px;}
        #placesList .item span {display: block;margin-top:4px;}
        #placesList .item h5, #placesList .item .info {text-overflow: ellipsis;overflow: hidden;white-space: nowrap;}
        #placesList .item .info{padding:10px 0 10px 55px;}
        #placesList .info .gray {color:#8a8a8a;}
        #placesList .info .jibun {padding-left:26px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png) no-repeat;}
        #placesList .info .tel {color:#009900;}
        #placesList .item .markerbg {float:left;position:absolute;width:36px; height:37px;margin:10px 0 0 10px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png) no-repeat;}
        #placesList .item .marker_1 {background-position: 0 -10px;}
        #placesList .item .marker_2 {background-position: 0 -56px;}
        #placesList .item .marker_3 {background-position: 0 -102px}
        #placesList .item .marker_4 {background-position: 0 -148px;}
        #placesList .item .marker_5 {background-position: 0 -194px;}
        #placesList .item .marker_6 {background-position: 0 -240px;}
        #placesList .item .marker_7 {background-position: 0 -286px;}
        #placesList .item .marker_8 {background-position: 0 -332px;}
        #placesList .item .marker_9 {background-position: 0 -378px;}
        #placesList .item .marker_10 {background-position: 0 -423px;}
        #placesList .item .marker_11 {background-position: 0 -470px;}
        #placesList .item .marker_12 {background-position: 0 -516px;}
        #placesList .item .marker_13 {background-position: 0 -562px;}
        #placesList .item .marker_14 {background-position: 0 -608px;}
        #placesList .item .marker_15 {background-position: 0 -654px;}
        #pagination {margin:10px auto;text-align: center;}
        #pagination a {display:inline-block;margin-right:10px;}
        #pagination .on {font-weight: bold; cursor: default;color:#777;}
    </style>
</head>
<body>
<nav class="navigation">
    <a href="/">
        <img src="{{storageUrl}}/static/logo.png" />
    </a>
    <form action="/post" method="get">
        <input name="tag" type="text" placeholder="Search">
        <button style="background-color:white; border:0; ">
            <i class="fa fa-search" style="font-size:15px"></i>
        </button>
    </form>
    <div class="navigation__links">
        <a href="/post/explore" class="navigation__link">
            <i class="fa fa-compass"></i>
        </a>
        <a href="/noti/{{loginUser.id}}" class="navigation__link follow_popup">
            <i class="fa fa-heart-o"></i>
        </a>
        <a href="/user/{{loginUser.id}}" class="navigation__link">
            <i class="fa fa-user-o"></i>
        </a>
    </div>
</nav>
{{#posts}}
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<main id="feed">
<style>
    a { text-decoration: none; color: black; }
    a:visited { text-decoration: none; }
    a:hover { text-decoration: none; }
    a:focus { text-decoration: none; }
    a:hover, a:active { text-decoration: none; }
</style>
<div class="photo u-default-box">
    <header class="photo__header">
        <a href="/user/{{user.id}}">
            <img src="{{#user.profileImage}}{{getUserProfileImage}}{{/user.profileImage}}"
                 onerror="this.src='{{storageUrl}}/static/avatar.jpg'" />
        </a>

        <a class="photo__username" href="/user/{{user.id}}">{{user.username}}</a>
    </header>
    <div class="photo_post_image"> <!-- 사진꽉채우기 css -->
        {{#images}}
            <img class="mySlides img-{{post.id}}" src="{{url}}" />
        {{/images}}
    </div>
    <div class="w3-center">
        <button id="btn-prev-{{id}}" class="w3-btn" onclick="plusDivs(-1, 'img-{{id}}')">&#10094; Prev</button>
        <button id="btn-next-{{id}}" class="w3-btn" onclick="plusDivs(1, 'img-{{id}}')">Next &#10095;</button>
    </div>

    <div class="photo__info">
        <div class="photo__actions">
            <span class="photo__action">
                {{#likeState}}
                    <i class="fa heart heart-clicked fa-heart" onclick="unLike({{id}})"></i>
                {{/likeState}}
                {{^likeState}}
                    <i class="fa fa-heart-o heart" onclick="like({{id}})"></i>
                {{/likeState}}
            </span>
            <span class="photo__action">
                {{#postHost}}
                <i onclick="postDelete({{id}})" class="fa fa-trash"></i>
                {{/postHost}}
            </span>
        </div>

        <div class="photo_tag">
            <span class="location__text" style="font-weight:bold;font-size:20px;">사용된 태그</span>
            {{#tags}}
                <a href="/post?tag={{name}}">#{{name}} </a>
            {{/tags}}
        </div>

        <span class="location__text" style="font-weight:bold;font-size:20px;">경로</span>

        <div class="map_wrap photo_post_image">
            <div id="map" style="width:100%;height:100%;position:relative;overflow:hidden;"></div>

            <div id="menu_wrap" class="bg_white">
                <hr>
                <ul id="placesList"></ul>
                <!-- <div id="pagination"></div> -->
            </div>
        </div>
        <br/>

        <span class="photo__likes">{{likeCount}} likes</span>
        <span class="photo__likes">{{viewCount}} Watched</span>
        <br/>
        <span style="font-size:14px;">{{content}}</span>
        <br/>
        <ul class="photo__comments">
            {{#comments}}
                <li class="photo__comment">
                    <a href="/user/{{user.id}}" ><span class="photo__comment-author">{{user.username}}</span></a>
                    <span style="font-size:12px;">{{content}}</span>
                    {{#commentHost}}
                        <i onclick="commentDelete({{id}})" class="fa fa-trash"></i>
                    {{/commentHost}}
                </li>
            {{/comments}}
        </ul>
        <span class="photo__date">{{createDateString}}</span>

        <div class="photo__add-comment-container">
            <form id="frm-{{id}}" style="width:100%;">
                <input type="hidden" name="userId" value="{{loginUser.id}}" />
                <input type="hidden" name="postId" value="{{id}}" />
                <textarea id="content-{{id}}" name="content"  placeholder="Add a comment..."></textarea>
            </form>
            <i onclick="commentSend({{id}})" class="fa fa-angle-right"></i>
        </div>
    </div>
</div>
{{/posts}}

</main>
<script type="text/javascript">
    function postDelete(postId) {
        fetch("/post/" + postId, {
            method: "delete"
        }).then(function (res) {
            return res.text();
        }).then(function (res) {
            alert("게시글이 삭제되었습니다.");
            location.href="/";
        });
    }

    {{>js/comment}}
    {{>js/like}}
</script>

<script>
    var slideIndex = 1;
        {{#posts}}
        showDivs(slideIndex, 'img-{{id}}');
        if(document.getElementsByClassName('mySlides img-{{id}}').length === 1) {
            document.getElementById("btn-prev-{{id}}").style.display="none";
            document.getElementById("btn-next-{{id}}").style.display="none";
        }
        {{/posts}}

    function plusDivs(n, class_id) {
        showDivs(slideIndex += n, class_id);
    }

    function showDivs(n, class_id) {
        var i;
        var x = document.getElementsByClassName(class_id);
        if (n > x.length) {slideIndex = 1}
        if (n < 1) {slideIndex = x.length}
        for (i = 0; i < x.length; i++) {
            x[i].style.display = "none";
        }
        x[slideIndex-1].style.display = "block";
    }
</script>
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=1b29e5f1a06b5ed964627df8f7e9c4b9&libraries=services"></script>
<script>
    // 마커를 담을 배열입니다
    var markers = [];

    var mapContainer = document.getElementById('map'), // 지도를 표시할 div
            mapOption = {
                center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표
                level: 3 // 지도의 확대 레벨
            };

    // 지도를 생성합니다
    var map = new kakao.maps.Map(mapContainer, mapOption);

    // 장소 검색 객체를 생성합니다
    var ps = new kakao.maps.services.Places();

    // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다
    var infowindow = new kakao.maps.InfoWindow({zIndex:1});

    var data = {{{mapData}}}

    displayPlaces(data);

    // 검색 결과 목록과 마커를 표출하는 함수입니다
    function displayPlaces(places) {
        console.log(places);

        var listEl = document.getElementById('placesList'),
                menuEl = document.getElementById('menu_wrap'),
                fragment = document.createDocumentFragment(),
                bounds = new kakao.maps.LatLngBounds(),
                listStr = '';

        // 검색 결과 목록에 추가된 항목들을 제거합니다
        removeAllChildNods(listEl);

        // 지도에 표시되고 있는 마커를 제거합니다
        removeMarker();

        for (var i = 0; i < places.length; i++ ) {

            // 마커를 생성하고 지도에 표시합니다
            var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),
                    marker = addMarker(placePosition, i),
                    itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다

            // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해
            // LatLngBounds 객체에 좌표를 추가합니다
            bounds.extend(placePosition);

            // 마커와 검색결과 항목에 mouseover 했을때
            // 해당 장소에 인포윈도우에 장소명을 표시합니다
            // mouseout 했을 때는 인포윈도우를 닫습니다
            (function(marker, title) {
                kakao.maps.event.addListener(marker, 'mouseover', function() {
                    displayInfowindow(marker, title);
                });

                kakao.maps.event.addListener(marker, 'mouseout', function() {
                    infowindow.close();
                });

                itemEl.onmouseover =  function () {
                    displayInfowindow(marker, title);
                };

                itemEl.onmouseout =  function () {
                    infowindow.close();
                };
            })(marker, places[i].place_name);

            console.log(itemEl);
            fragment.appendChild(itemEl);
        }

        // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다
        listEl.appendChild(fragment);
        menuEl.scrollTop = 0;

        // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다
        map.setBounds(bounds);
    }

    // 검색결과 항목을 Element로 반환하는 함수입니다
    function getListItem(index, places) {

        var el = document.createElement('li'),
                itemStr = '<span class="markerbg marker_' + (index+1) + '"></span>' +
                        '<div class="info">' +
                        '   <h5>' + places.place_name + '</h5>';

        if (places.road_address_name) {
            itemStr += ' <span>' + places.road_address_name + '</span>';
        }

        itemStr += '</div>';

        el.innerHTML = itemStr;
        el.className = 'item';

        return el;
    }

    // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다
    function addMarker(position, idx, title) {
        var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다
                imageSize = new kakao.maps.Size(36, 37),  // 마커 이미지의 크기
                imgOptions =  {
                    spriteSize : new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기
                    spriteOrigin : new kakao.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표
                    offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표
                },
                markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),
                marker = new kakao.maps.Marker({
                    position: position, // 마커의 위치
                    image: markerImage
                });

        marker.setMap(map); // 지도 위에 마커를 표출합니다
        markers.push(marker);  // 배열에 생성된 마커를 추가합니다

        return marker;
    }

    // 지도 위에 표시되고 있는 마커를 모두 제거합니다
    function removeMarker() {
        for ( var i = 0; i < markers.length; i++ ) {
            markers[i].setMap(null);
        }
        markers = [];
    }

    // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다
    function displayPagination(pagination) {
        var paginationEl = document.getElementById('pagination'),
                fragment = document.createDocumentFragment(),
                i;

        // 기존에 추가된 페이지번호를 삭제합니다
        while (paginationEl.hasChildNodes()) {
            paginationEl.removeChild (paginationEl.lastChild);
        }

        for (i=1; i<=pagination.last; i++) {
            var el = document.createElement('a');
            el.href = "#";
            el.innerHTML = i;

            if (i===pagination.current) {
                el.className = 'on';
            } else {
                el.onclick = (function(i) {
                    return function() {
                        pagination.gotoPage(i);
                    }
                })(i);
            }

            fragment.appendChild(el);
        }
        paginationEl.appendChild(fragment);
    }

    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다
    // 인포윈도우에 장소명을 표시합니다
    function displayInfowindow(marker, title) {
        var content = '<div style="padding:5px;z-index:1;">' + title + '</div>';

        infowindow.setContent(content);
        infowindow.open(map, marker);
    }

    // 검색결과 목록의 자식 Element를 제거하는 함수입니다
    function removeAllChildNods(el) {
        while (el.hasChildNodes()) {
            el.removeChild (el.lastChild);
        }
    }
</script>
{{>layout/footer}}