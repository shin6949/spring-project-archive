name: Deploy to Cloud Server

on:
  push:
    branches:
      - main
      - feature-test

jobs:
  test:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

      - name: Set Up mariaDB
        uses: getong/mariadb-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql database: maventest
          mysql root password: testuser6949
          mysql user: test
          mysql password: testuser6949

      - name: Setup Java JDK
        uses: actions/setup-java@v2.2.0
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Load Maven Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Make Package With Maven
        run: mvn package -Dspring.profiles.active=test
        env:
          DB_URL: jdbc:mariadb://127.0.0.1:3306/maventest
          DB_USER: root
          DB_PASSWORD: testuser6949
          COS_SECRET: ${{ secrets.COS_SECRET }}
          AZURE_CONNECT_STRING: ${{ secrets.AZURE_CONNECT_STRING }}
          AZURE_BLOB_URL: ${{ secrets.AZURE_BLOB_URL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PERSONAL_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/iter:latest
#            ghcr.io/${{ github.repository_owner }}/iter:${{ env.RELEASE_VERSION }}

#      - uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SSH_REMOTE_IP }}
#          username: ${{ secrets.SSH_REMOTE_USER }}
#          key: ${{ secrets.SSH_KEY }}
#          port: ${{ secrets.SSH_PORT }}
#          script: |
#            whoami
#            git pull origin master
